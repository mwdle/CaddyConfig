# Trusted proxy configuration
{
	servers {
        # Assumes your docker networks are in the default 172.16.0.0/12 range
		trusted_proxies static 172.16.0.0/12
		trusted_proxies_strict
        # Use client IP provided by Cloudflare before any other.
		client_ip_headers Cf-Connecting-Ip X-Forwarded-For X-Real-IP
	}
}

# Basic security headers that should be imported on every reverse proxy configuration.
(required) {
	header {
		?Cache-Control "max-age=43200, must-revalidate"
		Strict-Transport-Security "max-age=15552000; includeSubDomains; preload"
		?X-Content-Type-Options "nosniff"
		?X-Frame-Options "DENY"
		Referrer-Policy "strict-origin-when-cross-origin"
		-Server
		-X-Powered-By
	}
}

# Permissions Policy that denies all permissions. Copy and modify this template while monitoring a browser's debug console until you have the strictest possible policy while still allowing your service to function without errors in console.
(perms) {
	header {
		Permissions-Policy "accelerometer=(), ambient-light-sensor=(), autoplay=(), battery=(), bluetooth=(), camera=(), display-capture=(), encrypted-media=(), fullscreen=(), gamepad=(), geolocation=(), gyroscope=(), hid=(), idle-detection=(), magnetometer=(), microphone=(), midi=(), payment=(), picture-in-picture=(), publickey-credentials-get=(), screen-wake-lock=(), serial=(), storage-access=(), speaker-selection=(), usb=(), web-share=(), xr-spatial-tracking=()"
	}
}

# CORS related headers that should be imported on every reverse proxy configuration (unless a different set of CORS headers is used). Copy and modify this template as needed for other reverse proxy configurations.
(cors) {
	header {
		?Cross-Origin-Embedder-Policy "require-corp"
		?Cross-Origin-Opener-Policy "same-origin"
		?Cross-Origin-Resource-Policy "same-origin"
	}
}

# CORS related headers for HTTP services that load/embed resources from cross origin sites.
(embedder_cors) {
	header {
		?Cross-Origin-Embedder-Policy "credentialless"
		?Cross-Origin-Opener-Policy "same-origin"
		?Cross-Origin-Resource-Policy "same-origin"
	}
}

# CORS related headers for HTTP services that load/embed resources from cross origin sites and/or services that will be accessed from or embedded on cross origin sites.
(resource_cors) {
	header {
		?Cross-Origin-Embedder-Policy "credentialless"
		?Cross-Origin-Opener-Policy "same-origin"
		?Cross-Origin-Resource-Policy "cross-origin"
	}
}

# Content Security Policy Headers that deny everything. Copy and modify this template while monitoring a browser developer console until you have the strictest possible CSP while still allowing your service to function without errors in console.
(csp) {
	header {
		Content-Security-Policy "default-src 'none'; frame-src 'none'; manifest-src 'none'; object-src 'none'; font-src 'none'; style-src 'none'; script-src 'none'; img-src 'none'; media-src 'none'; frame-ancestors 'none'; form-action 'none'; connect-src 'none'; worker-src 'none';"
	}
}

# Reverse proxy configuration for a service available in a connected Docker network.
my.domain.com:443 {
	tls /data/fullchain.pem /data/privkey.pem
	reverse_proxy <CONTAINER_NAME>
	import required
	import cors
	import perms
	import csp
}